#pragma kernel Transfer

struct Vert{
  float3 pos;
  float3 nor;
  float3 tangent;
  float2 uv;
  float debug;
};


struct Particle{
  float3 pos;
  float3 oPos;
  float3 nor;
  float3 tangent;
  float2 uv;
  float2 debug;
};



RWStructuredBuffer<Particle> _VertBuffer;
RWStructuredBuffer<Vert> _SkeletonBuffer;

int _VertBuffer_COUNT;
int _SkeletonBuffer_COUNT;

float4x4 _TransformBase;

#include "../Chunks/safeID.cginc"

#define NR_THREADS 128
[numthreads(NR_THREADS,1,1)]
void Transfer (uint threadID : SV_GroupIndex, uint3 u3GroupID : SV_GroupID) {

  int pID = threadID + u3GroupID.x * NR_THREADS;

  if( pID < _VertBuffer_COUNT ){
    
    Vert v = _SkeletonBuffer[safeID( pID , _SkeletonBuffer_COUNT )];

    _VertBuffer[pID].pos      = mul(_TransformBase,float4(v.pos,1)).xyz;// = v;
    _VertBuffer[pID].nor      = mul(_TransformBase,float4(v.nor,0)).xyz;// = v;
    _VertBuffer[pID].tangent  = mul(_TransformBase,float4(v.tangent,0)).xyz;// = v;
    _VertBuffer[pID].uv       = v.uv;// = v;
    //_VertBuffer[pID].debug    = .5;


  }

}